name: deploy-ztp-relocatable
on:
  workflow_dispatch:
    inputs:
      KUBECONFIG:
        description: 'Absolute path to kubeconfig file?'
        required: true
      OC_KUBEADMIN_PASS_SECRET:
        description: 'Kubeadmin password:'
        required: true
      RUNNER:
        description: 'Github Action Runner Tag'
        required: true


env:
  KUBECONFIG: ${{github.event.inputs.KUBECONFIG}}
  OC_KUBEADMIN_PASS_SECRET: ${{github.event.inputs.OC_KUBEADMIN_PASS_SECRET}}
  OC_OCP_VERSION: '4.9'
  OC_OCP_TAG: '4.9.0-x86_64'
  OC_RHCOS_RELEASE: '49.84.202110081407-0'  # TODO automate it to get it automated using binary 
  OC_ACM_VERSION: '2.4'
  DEPLOY_ACM_DIR: deploy-acm
  DEPLOY_REGISTRY_DIR: deploy-disconnected-registry
  DEPLOY_HTTPD_SERVER_DIR: deploy-httpd-server
  DEPLOY_HUB_CONFIGS_DIR: deploy-hub-configs
  SHARED_DIR: shared-utils


jobs:
  pre-flight:
    runs-on: ${{github.event.inputs.RUNNER}}   #tag with your runner tag
    outputs:
      result: ${{ steps.Verification.outputs.status }} 
    steps:
      - uses: actions/checkout@v2 # create a checkout (pull repository) in the runner working_dir (usually _work)
      - run: git pull origin ${GITHUB_REF##*/}

      - name: Verification
        run: |
          cd ${{env.SHARED_DIR}}
          ./verify_preflight.sh 
          echo "::set-output name=result::$?"
     

  deploy-httpd-server:
    needs: pre-flight          # run in parallel with the other jobs    
    runs-on: ${{github.event.inputs.RUNNER}}
    if: ${{ needs.pre-flight.outputs.result }} == 0
    steps:
      - name: Deploy Internal HTTPD Server
        run: |
          cd ${{env.DEPLOY_HTTPD_SERVER_DIR}}
          echo "ejecuta job 2"
   #       ./deploy.sh
  
  #deploy-acm:  
  #  needs: pre-flight          # run in parallel with the other jobs
  #  runs-on: ${{github.event.inputs.RUNNER}}
  #  steps:
  #    - name: Deploy RHACM with AI  
  #      run: |
  #        cd ${{env.DEPLOY_ACM_DIR}}
  #        ./deploy.sh
#
  #deploy-disconnected-registry:
  #  needs: deploy-acm         # run in parallel with the other jobs       
  #  runs-on: ${{github.event.inputs.RUNNER}}
  #  steps:
  #    - name: Deploy Internal Disconnected Registry 
  #      run: |
  #        cd ${{env.DEPLOY_REGISTRY_DIR}}
  #        ./deploy.sh
#
  #deploy-hub-config:  
  #  needs: [deploy-acm, deploy-disconnected-registry, deploy-httpd-server]       # run in parallel with the other jobs
  #  runs-on: ${{github.event.inputs.RUNNER}}
  #  steps:
  #    - name: Deploy hub configuration
  #      run: |
  #        cd ${{env.DEPLOY_HUB_CONFIGS_DIR}}
  #        ./deploy.sh
